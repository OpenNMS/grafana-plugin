{"version":3,"file":"panels/alarm-histogram/module.js","mappings":"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","sources":["webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"jquery\"","webpack:///external amd \"react\"","webpack:///external amd \"@grafana/data\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./panels/alarm-histogram/constants.ts","webpack:///./panels/alarm-histogram/AlarmGroupEditor.tsx","webpack:///./panels/alarm-histogram/AlarmDirectionEditor.tsx","webpack:///./panels/alarm-histogram/module.ts","webpack:///./panels/alarm-histogram/AlarmHistogramControl.tsx","webpack:///./panels/alarm-histogram/alarmhooks.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4846__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const defaultColors = ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)']\n\nexport const AlarmDirections = {\n    Vertical: { label: 'Vertical', value: 1 },\n    Horizontal: { label: 'Horizontal', value: 2 }\n}\n\nexport const AlarmGroups = {\n    Acknowledged: { label: 'Acknowledged', value: 1 },\n    Severity: { label: 'Severity', value: 2 },\n}\n\nexport const AcknowledgedAlarms = {\n    Outstanding: { index: 0, label: 'Outstanding', value: undefined },\n    Acknowledged: { index: 1, label: 'Acknowledged', value: true },\n}\n\nexport const AlarmSeverity = {\n    CLEARED: { index: 0, label: 'Cleared', value: 'CLEARED' },\n    NORMAL: { index: 1, label: 'Normal', value: 'NORMAL' },\n    INDETERMINATE: { index: 2, label: 'Indeterm.', value: 'INDETERMINATE' },\n    WARNING: { index: 3, label: 'Warning', value: 'WARNING' },\n    MINOR: { index: 4, label: 'Minor', value: 'MINOR' },\n    MAJOR: { index: 5, label: 'Major', value: 'MAJOR' },\n    CRITICAL: { index: 6, label: 'Critical', value: 'CRITICAL' },\n}\n","import React from 'react'\nimport { PanelOptionsEditorProps } from '@grafana/data'\nimport { Select } from '@grafana/ui'\nimport { AlarmGroups } from './constants'\n\ninterface Props extends PanelOptionsEditorProps<number> { }\n\nexport const AlarmGroupEditor: React.FC<Props> = ({ value, onChange }) => {\n    return (\n        <div>\n            <Select options={[\n                { ...AlarmGroups.Acknowledged },\n                { ...AlarmGroups.Severity },\n            ]}\n                value={value}\n                onChange={(e) => onChange(e.value)}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { PanelOptionsEditorProps } from '@grafana/data'\nimport { Select } from '@grafana/ui'\nimport { AlarmDirections } from './constants'\n\ninterface Props extends PanelOptionsEditorProps<number> { }\n\nexport const AlarmDirectionEditor: React.FC<Props> = ({ value, onChange }) => {\n    return (\n        \n        <div>\n            <Select options={[\n                { ...AlarmDirections.Vertical },\n                { ...AlarmDirections.Horizontal },\n            ]}\n\n                value={value}\n                onChange={(e) => onChange(e.value)}\n            />\n        </div>\n    )\n}\n","import { PanelPlugin } from '@grafana/data'\nimport { AlarmHistogramControl } from './AlarmHistogramControl'\nimport { AlarmGroupEditor, AlarmDirectionEditor } from '.'\n\nexport const plugin = new PanelPlugin(AlarmHistogramControl).setPanelOptions((builder) => {\n    builder.addCustomEditor({id: 'alarm-group',path: 'alarmGroup', name:'Alarm Group',editor: AlarmGroupEditor})\n    builder.addCustomEditor({id: 'alarm-direction',path: 'alarmDirection', name:'Alarm Direction',editor: AlarmDirectionEditor})\n})\n","import React, { useEffect } from 'react'\nimport { PanelProps } from '@grafana/data'\nimport $ from 'jquery'\nimport { useAlarmHooks } from './alarmhooks'\n\ntype SeriesSize = 'sm' | 'md' | 'lg'\n\ninterface SimpleOptions {\n  text: string;\n  showSeriesCount: boolean;\n  seriesCountSize: SeriesSize;\n}\n\ninterface AlarmHistogramControlOptions extends SimpleOptions { alarmGroup: number, alarmDirection: number }\ninterface Props extends PanelProps<AlarmHistogramControlOptions> { }\n\nexport const AlarmHistogramControl: React.FC<Props> = ({ options, data, width, height }) => {\n    const { getPlotConfig, getPlotData, ref } = useAlarmHooks()\n\n    useEffect(() => {\n        const plotData = getPlotData(options.alarmGroup, options.alarmDirection,data)\n        const plotConfig = getPlotConfig(options.alarmGroup, options.alarmDirection);\n        $.plot(ref.current, plotData, plotConfig)\n\n    }, [data, options.alarmGroup, width, height, options.alarmDirection, getPlotConfig, getPlotData, ref])\n\n    return (\n        <div ref={ref} style={{ width: width, height: height }} />\n    )\n}\n","import { useRef } from 'react'\nimport { colors } from '@grafana/ui'\nimport { AcknowledgedAlarms, AlarmDirections, AlarmGroups, AlarmSeverity } from './constants'\n\nexport const useAlarmHooks = () => {\n    const ref: any = useRef()\n\n    const getPlotDataPoint = (direction, data, index) => {\n        return direction === AlarmDirections.Horizontal.value ? [data, index] : [index, data]\n    }\n\n    const getAcknowledgedData = (direction, data) => {\n        const seriesKey = 'Acked By'\n        const seriesData = [\n            getSeriesValueCount(seriesKey, AcknowledgedAlarms.Outstanding.value, data),\n            getSeriesValueCount(seriesKey, AcknowledgedAlarms.Acknowledged.value, data, true)\n        ]\n        return [\n            { data: [getPlotDataPoint(direction, seriesData[0], AcknowledgedAlarms.Outstanding.index)], color: colors[0] },\n            { data: [getPlotDataPoint(direction, seriesData[1], AcknowledgedAlarms.Acknowledged.index)], color: colors[4] },\n        ];\n    }\n\n    const getSeriesValues = (fieldKey: string, data) => {\n        return data.series.map((serie) => {\n            return serie.fields.find((field) => field.name === fieldKey)?.values.toArray()\n        })\n    }\n\n    const getSeriesValueCount = (fieldKey, resultKey, data, countPositive = false) => {\n        const seriesValues: any = getSeriesValues(fieldKey, data);\n        let count = 0;\n        for (let entries of seriesValues) {\n            if (entries) {\n\n                for (let entry of entries) {\n                    if (entry === resultKey || (countPositive && entry)) {\n                        count += 1;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n\n    const getSeverityData = (direction, data) => {\n        const seriesKey = 'Severity'\n\n        const seriesData = [\n            getSeriesValueCount(seriesKey, AlarmSeverity.CLEARED.value, data),\n            getSeriesValueCount(seriesKey, AlarmSeverity.NORMAL.value, data),\n            getSeriesValueCount(seriesKey, AlarmSeverity.INDETERMINATE.value, data),\n            getSeriesValueCount(seriesKey, AlarmSeverity.WARNING.value, data),\n            getSeriesValueCount(seriesKey, AlarmSeverity.MINOR.value, data),\n            getSeriesValueCount(seriesKey, AlarmSeverity.MAJOR.value, data),\n            getSeriesValueCount(seriesKey, AlarmSeverity.CRITICAL.value, data),\n        ]\n        return [\n            { data: [getPlotDataPoint(direction, seriesData[0], AlarmSeverity.CLEARED.index)], color: \"#EEE000\" },\n            { data: [getPlotDataPoint(direction, seriesData[1], AlarmSeverity.NORMAL.index)], color: '#86B15B' },\n            { data: [getPlotDataPoint(direction, seriesData[2], AlarmSeverity.INDETERMINATE.index)], color: '#990000' },\n            { data: [getPlotDataPoint(direction, seriesData[3], AlarmSeverity.WARNING.index)], color: '#FCCC3B' },\n            { data: [getPlotDataPoint(direction, seriesData[4], AlarmSeverity.MINOR.index)], color: '#EE901C' },\n            { data: [getPlotDataPoint(direction, seriesData[5], AlarmSeverity.MAJOR.index)], color: '#E3692F' },\n            { data: [getPlotDataPoint(direction, seriesData[6], AlarmSeverity.CRITICAL.index)], color: '#DB4345' },\n        ];\n    }\n\n    const getSeverityTicks = () => {\n        return [\n            [AlarmSeverity.CLEARED.index, AlarmSeverity.CLEARED.label],\n            [AlarmSeverity.NORMAL.index, AlarmSeverity.NORMAL.label],\n            [AlarmSeverity.INDETERMINATE.index, AlarmSeverity.INDETERMINATE.label],\n            [AlarmSeverity.WARNING.index, AlarmSeverity.WARNING.label],\n            [AlarmSeverity.MINOR.index, AlarmSeverity.MINOR.label],\n            [AlarmSeverity.MAJOR.index, AlarmSeverity.MAJOR.label],\n            [AlarmSeverity.CRITICAL.index, AlarmSeverity.CRITICAL.label],\n        ]\n    }\n\n    const getAcknowledgedTicks = () => {\n        return [\n            [AcknowledgedAlarms.Acknowledged.index, AcknowledgedAlarms.Acknowledged.label],\n            [AcknowledgedAlarms.Outstanding.index, AcknowledgedAlarms.Outstanding.label],\n        ]\n    }\n\n    const getTicks = (group) => {\n        return group === AlarmGroups.Acknowledged.value ? getAcknowledgedTicks() : getSeverityTicks();\n    }\n\n    const getPlotData = (group, direction, data) => {\n        return group === AlarmGroups.Acknowledged.value ? getAcknowledgedData(direction, data) : getSeverityData(direction, data);\n    }\n\n    const getPlotConfig = (group, direction) => {\n        const axis = AlarmDirections.Horizontal.value === direction ? 'yaxis' : 'xaxis';\n        return {\n            series: {\n                bars: {\n                    show: true,\n                    barWidth: direction === AlarmDirections.Horizontal.value ? 0.5 : 0.6,\n                    align: 'center',\n                    fill: 0.8,\n                    lineWidth: 1.0,\n                    horizontal: direction === AlarmDirections.Horizontal.value,\n                }\n            },\n            [axis]: {\n                mode: 'categories',\n                tickLength: 0,\n                autoscaleMargin: 0.02,\n                ticks: getTicks(group)\n            },\n            grid: {\n                borderWidth: 0,\n            },\n        }\n    }\n\n    return { getPlotData, getPlotConfig, ref }\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__4846__","__WEBPACK_EXTERNAL_MODULE__5959__","__WEBPACK_EXTERNAL_MODULE__7781__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","AlarmDirections","label","AlarmGroups","AcknowledgedAlarms","index","AlarmSeverity","AlarmGroupEditor","onChange","div","Select","options","e","AlarmDirectionEditor","plugin","PanelPlugin","data","width","height","getPlotConfig","getPlotData","ref","useRef","getPlotDataPoint","direction","getSeriesValueCount","fieldKey","resultKey","countPositive","seriesValues","series","map","serie","fields","find","field","name","values","toArray","getSeriesValues","count","entries","entry","getTicks","group","seriesKey","seriesData","color","colors","getAcknowledgedData","getSeverityData","axis","bars","show","barWidth","align","fill","lineWidth","horizontal","mode","tickLength","autoscaleMargin","ticks","grid","borderWidth","useAlarmHooks","useEffect","plotData","alarmGroup","alarmDirection","plotConfig","$","current","style","setPanelOptions","builder","addCustomEditor","id","path","editor"],"sourceRoot":""}